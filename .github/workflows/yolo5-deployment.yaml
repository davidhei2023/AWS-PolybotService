name: Yolo5 Microservice Deployment

on:
  push:
    paths:
      - 'yolo5/**'
    branches:
      - main

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v2

      - name: Build and push image
        run: |
          cd yolo5
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/yolo5:latest .
          echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/yolo5:latest

  Deploy:
    runs-on: ubuntu-latest
    needs:
      - Build

    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v2

      - name: Deploy new version
        run: |
          ASG_INSTANCES=$(aws autoscaling describe-auto-scaling-groups --auto-scaling-group-names Yolo5AutoScalingGroup --query 'AutoScalingGroups[*].Instances[*].InstanceId' --output text --region ${{ secrets.AWS_REGION }})
          
          for instance in $ASG_INSTANCES; do
            PUBLIC_IP=$(aws ec2 describe-instances --instance-ids $instance --query 'Reservations[0].Instances[0].PublicIpAddress' --output text --region ${{ secrets.AWS_REGION }})
            ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} ec2-user@$PUBLIC_IP << 'EOF'
              sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/yolo5:latest
              sudo docker stop yolo5_container || true
              sudo docker rm yolo5_container || true
              sudo docker run -d --name yolo5_container -p 8443:8443 ${{ secrets.DOCKER_HUB_USERNAME }}/yolo5:latest
              EOF
